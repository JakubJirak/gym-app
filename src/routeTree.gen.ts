/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as AuthTreninkyIndexRouteImport } from './routes/_auth/treninky/index'
import { Route as AuthStatistikyIndexRouteImport } from './routes/_auth/statistiky/index'
import { Route as AuthRutinyIndexRouteImport } from './routes/_auth/rutiny/index'
import { Route as AuthProfilIndexRouteImport } from './routes/_auth/profil/index'
import { Route as AuthPowerliftingIndexRouteImport } from './routes/_auth/powerlifting/index'
import { Route as AuthMenuIndexRouteImport } from './routes/_auth/menu/index'
import { Route as AuthKalendarIndexRouteImport } from './routes/_auth/kalendar/index'
import { Route as AuthCvikyIndexRouteImport } from './routes/_auth/cviky/index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthTreninkyIndexRoute = AuthTreninkyIndexRouteImport.update({
  id: '/treninky/',
  path: '/treninky/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthStatistikyIndexRoute = AuthStatistikyIndexRouteImport.update({
  id: '/statistiky/',
  path: '/statistiky/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthRutinyIndexRoute = AuthRutinyIndexRouteImport.update({
  id: '/rutiny/',
  path: '/rutiny/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProfilIndexRoute = AuthProfilIndexRouteImport.update({
  id: '/profil/',
  path: '/profil/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthPowerliftingIndexRoute = AuthPowerliftingIndexRouteImport.update({
  id: '/powerlifting/',
  path: '/powerlifting/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMenuIndexRoute = AuthMenuIndexRouteImport.update({
  id: '/menu/',
  path: '/menu/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthKalendarIndexRoute = AuthKalendarIndexRouteImport.update({
  id: '/kalendar/',
  path: '/kalendar/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthCvikyIndexRoute = AuthCvikyIndexRouteImport.update({
  id: '/cviky/',
  path: '/cviky/',
  getParentRoute: () => AuthRoute,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/cviky': typeof AuthCvikyIndexRoute
  '/kalendar': typeof AuthKalendarIndexRoute
  '/menu': typeof AuthMenuIndexRoute
  '/powerlifting': typeof AuthPowerliftingIndexRoute
  '/profil': typeof AuthProfilIndexRoute
  '/rutiny': typeof AuthRutinyIndexRoute
  '/statistiky': typeof AuthStatistikyIndexRoute
  '/treninky': typeof AuthTreninkyIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/cviky': typeof AuthCvikyIndexRoute
  '/kalendar': typeof AuthKalendarIndexRoute
  '/menu': typeof AuthMenuIndexRoute
  '/powerlifting': typeof AuthPowerliftingIndexRoute
  '/profil': typeof AuthProfilIndexRoute
  '/rutiny': typeof AuthRutinyIndexRoute
  '/statistiky': typeof AuthStatistikyIndexRoute
  '/treninky': typeof AuthTreninkyIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/_auth/cviky/': typeof AuthCvikyIndexRoute
  '/_auth/kalendar/': typeof AuthKalendarIndexRoute
  '/_auth/menu/': typeof AuthMenuIndexRoute
  '/_auth/powerlifting/': typeof AuthPowerliftingIndexRoute
  '/_auth/profil/': typeof AuthProfilIndexRoute
  '/_auth/rutiny/': typeof AuthRutinyIndexRoute
  '/_auth/statistiky/': typeof AuthStatistikyIndexRoute
  '/_auth/treninky/': typeof AuthTreninkyIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/cviky'
    | '/kalendar'
    | '/menu'
    | '/powerlifting'
    | '/profil'
    | '/rutiny'
    | '/statistiky'
    | '/treninky'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/cviky'
    | '/kalendar'
    | '/menu'
    | '/powerlifting'
    | '/profil'
    | '/rutiny'
    | '/statistiky'
    | '/treninky'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login/'
    | '/register/'
    | '/_auth/cviky/'
    | '/_auth/kalendar/'
    | '/_auth/menu/'
    | '/_auth/powerlifting/'
    | '/_auth/profil/'
    | '/_auth/rutiny/'
    | '/_auth/statistiky/'
    | '/_auth/treninky/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/treninky/': {
      id: '/_auth/treninky/'
      path: '/treninky'
      fullPath: '/treninky'
      preLoaderRoute: typeof AuthTreninkyIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/statistiky/': {
      id: '/_auth/statistiky/'
      path: '/statistiky'
      fullPath: '/statistiky'
      preLoaderRoute: typeof AuthStatistikyIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/rutiny/': {
      id: '/_auth/rutiny/'
      path: '/rutiny'
      fullPath: '/rutiny'
      preLoaderRoute: typeof AuthRutinyIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/profil/': {
      id: '/_auth/profil/'
      path: '/profil'
      fullPath: '/profil'
      preLoaderRoute: typeof AuthProfilIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/powerlifting/': {
      id: '/_auth/powerlifting/'
      path: '/powerlifting'
      fullPath: '/powerlifting'
      preLoaderRoute: typeof AuthPowerliftingIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/menu/': {
      id: '/_auth/menu/'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof AuthMenuIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/kalendar/': {
      id: '/_auth/kalendar/'
      path: '/kalendar'
      fullPath: '/kalendar'
      preLoaderRoute: typeof AuthKalendarIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/cviky/': {
      id: '/_auth/cviky/'
      path: '/cviky'
      fullPath: '/cviky'
      preLoaderRoute: typeof AuthCvikyIndexRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthRouteChildren {
  AuthCvikyIndexRoute: typeof AuthCvikyIndexRoute
  AuthKalendarIndexRoute: typeof AuthKalendarIndexRoute
  AuthMenuIndexRoute: typeof AuthMenuIndexRoute
  AuthPowerliftingIndexRoute: typeof AuthPowerliftingIndexRoute
  AuthProfilIndexRoute: typeof AuthProfilIndexRoute
  AuthRutinyIndexRoute: typeof AuthRutinyIndexRoute
  AuthStatistikyIndexRoute: typeof AuthStatistikyIndexRoute
  AuthTreninkyIndexRoute: typeof AuthTreninkyIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCvikyIndexRoute: AuthCvikyIndexRoute,
  AuthKalendarIndexRoute: AuthKalendarIndexRoute,
  AuthMenuIndexRoute: AuthMenuIndexRoute,
  AuthPowerliftingIndexRoute: AuthPowerliftingIndexRoute,
  AuthProfilIndexRoute: AuthProfilIndexRoute,
  AuthRutinyIndexRoute: AuthRutinyIndexRoute,
  AuthStatistikyIndexRoute: AuthStatistikyIndexRoute,
  AuthTreninkyIndexRoute: AuthTreninkyIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
